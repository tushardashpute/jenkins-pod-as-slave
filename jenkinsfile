podTemplate(label: 'mypod', containers: [
    containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.8', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'sonar-scanner-newtmitch', image: 'newtmitch/sonar-scanner', command: 'cat', ttyEnabled: true)
  ],
  volumes: [
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
]) {
    node('mypod') {
        environment {
		    registryCredential='docker-cred'
		    registry = 'tushardashpute/springboot-k8s:latest'
	    }
        stage('Get a Maven project') {
            git 'https://github.com/tushardashpute/springboot-maven-course-micro-svc.git'
            container('maven') {
                    sh 'mvn -B clean install'
            }
        }
        stage("scan"){
            container("sonar-scanner-newtmitch"){
                withSonarQubeEnv(installationName: 'sonarqube', credentialsId: 'sonar-token') {
                    sh "cd /home/jenkins/agent/workspace/jenkins-slave"
                    sh  "pwd"
                    sh 'sonar-scanner'
                }
                    
                timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }  
        }
        stage('Create Docker images') {
            container('docker') {
                withCredentials([usernamePassword(credentialsId: 'docker_credentials', passwordVariable: 'password', usernameVariable: 'username')]) {
                    sh "docker login -u ${username} -p ${password}"
                }
                sh "docker build -t tushardashpute/springboot-k8s:latest ."
                sh "docker push  tushardashpute/springboot-k8s:latest"
                }
            }
        }
    }
